#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.1 on Tue Mar 23 19:46:24 2021
#

import wx

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MainFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((950, 540))
        self.SetTitle("KNetScanner")

        grid_sizer_1 = wx.FlexGridSizer(3, 3, 0, 0)

        grid_sizer_1.Add((8, 8), 0, 0, 0)

        grid_sizer_1.Add((20, 8), 0, 0, 0)

        grid_sizer_1.Add((8, 8), 0, 0, 0)

        grid_sizer_1.Add((8, 20), 0, 0, 0)

        self.panel_main = wx.Panel(self, wx.ID_ANY)
        grid_sizer_1.Add(self.panel_main, 0, wx.EXPAND, 0)

        sizer_main = wx.FlexGridSizer(2, 2, 4, 4)

        self.check_list_box_targets = wx.CheckListBox(self.panel_main, wx.ID_ANY, choices=[])
        self.check_list_box_targets.SetMinSize((220, 200))
        sizer_main.Add(self.check_list_box_targets, 0, wx.EXPAND, 0)

        sizer_6 = wx.FlexGridSizer(3, 1, 4, 0)
        sizer_main.Add(sizer_6, 1, wx.EXPAND, 0)

        sizer_7 = wx.FlexGridSizer(1, 4, 0, 4)
        sizer_6.Add(sizer_7, 1, wx.EXPAND, 0)

        self.text_host = wx.TextCtrl(self.panel_main, wx.ID_ANY, "<Host>")
        sizer_7.Add(self.text_host, 0, wx.EXPAND, 0)

        self.text_port = wx.TextCtrl(self.panel_main, wx.ID_ANY, "<Port>")
        sizer_7.Add(self.text_port, 0, wx.EXPAND, 0)

        self.text_name = wx.TextCtrl(self.panel_main, wx.ID_ANY, "<Name>")
        sizer_7.Add(self.text_name, 0, wx.EXPAND, 0)

        self.button_add = wx.Button(self.panel_main, wx.ID_ANY, "Add target")
        self.button_add.SetMinSize((120, 40))
        sizer_7.Add(self.button_add, 0, wx.ALIGN_RIGHT, 0)

        sizer_8 = wx.FlexGridSizer(1, 7, 0, 4)
        sizer_6.Add(sizer_8, 1, wx.EXPAND, 0)

        label_3 = wx.StaticText(self.panel_main, wx.ID_ANY, "Threads", style=wx.ALIGN_CENTER_HORIZONTAL)
        label_3.SetMinSize((82, 26))
        sizer_8.Add(label_3, 0, wx.ALIGN_CENTER | wx.ALL, 0)

        self.spin_ctrl_threads = wx.SpinCtrl(self.panel_main, wx.ID_ANY, "8", min=1, max=65536)
        sizer_8.Add(self.spin_ctrl_threads, 0, wx.EXPAND, 0)

        label_4 = wx.StaticText(self.panel_main, wx.ID_ANY, "Timeout", style=wx.ALIGN_CENTER_HORIZONTAL)
        label_4.SetMinSize((82, 26))
        sizer_8.Add(label_4, 0, wx.ALIGN_CENTER | wx.ALL, 0)

        self.spin_ctrl_timeout = wx.SpinCtrl(self.panel_main, wx.ID_ANY, "100", min=1, max=100000)
        sizer_8.Add(self.spin_ctrl_timeout, 0, wx.EXPAND, 0)

        label_5 = wx.StaticText(self.panel_main, wx.ID_ANY, "ms", style=wx.ALIGN_CENTER_HORIZONTAL)
        label_5.SetMinSize((32, 26))
        sizer_8.Add(label_5, 0, wx.ALIGN_CENTER | wx.ALL, 0)

        self.button_save_logs = wx.Button(self.panel_main, wx.ID_ANY, "Save logs")
        self.button_save_logs.SetMinSize((110, 40))
        sizer_8.Add(self.button_save_logs, 0, wx.EXPAND, 0)

        self.button_start_scan = wx.Button(self.panel_main, wx.ID_ANY, "Start scan")
        self.button_start_scan.SetMinSize((120, 40))
        sizer_8.Add(self.button_start_scan, 0, wx.EXPAND, 0)

        self.text_output = wx.TextCtrl(self.panel_main, wx.ID_ANY, "", style=wx.TE_MULTILINE | wx.TE_READONLY | wx.TE_WORDWRAP)
        sizer_6.Add(self.text_output, 0, wx.EXPAND, 0)

        self.button_remove = wx.Button(self.panel_main, wx.ID_ANY, "Remove target")
        sizer_main.Add(self.button_remove, 0, wx.ALL | wx.EXPAND, 0)

        self.label_status = wx.StaticText(self.panel_main, wx.ID_ANY, "Ready.")
        sizer_main.Add(self.label_status, 0, wx.ALIGN_CENTER_VERTICAL | wx.ALL | wx.EXPAND, 4)

        grid_sizer_1.Add((8, 20), 0, 0, 0)

        grid_sizer_1.Add((8, 8), 0, 0, 0)

        grid_sizer_1.Add((20, 8), 0, 0, 0)

        grid_sizer_1.Add((8, 8), 0, 0, 0)

        sizer_8.AddGrowableRow(0)
        sizer_8.AddGrowableCol(1)

        sizer_7.AddGrowableRow(0)
        sizer_7.AddGrowableCol(0)
        sizer_7.AddGrowableCol(2)

        sizer_6.AddGrowableRow(2)
        sizer_6.AddGrowableCol(0)

        sizer_main.AddGrowableRow(0)
        sizer_main.AddGrowableCol(1)
        self.panel_main.SetSizer(sizer_main)

        grid_sizer_1.AddGrowableRow(1)
        grid_sizer_1.AddGrowableCol(1)
        self.SetSizer(grid_sizer_1)

        self.Layout()

        self.Bind(wx.EVT_BUTTON, self.button_add_target_click, self.button_add)
        self.Bind(wx.EVT_BUTTON, self.button_save_logs_click, self.button_save_logs)
        self.Bind(wx.EVT_BUTTON, self.button_start_scan_click, self.button_start_scan)
        self.Bind(wx.EVT_BUTTON, self.button_remove_target_click, self.button_remove)
        # end wxGlade

    def button_add_target_click(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'button_add_target_click' not implemented!")
        event.Skip()

    def button_save_logs_click(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'button_save_logs_click' not implemented!")
        event.Skip()

    def button_start_scan_click(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'button_start_scan_click' not implemented!")
        event.Skip()

    def button_remove_target_click(self, event):  # wxGlade: MainFrame.<event_handler>
        print("Event handler 'button_remove_target_click' not implemented!")
        event.Skip()

# end of class MainFrame

class KNetScannerGUI(wx.App):
    def OnInit(self):
        self.frame_main = MainFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame_main)
        self.frame_main.Show()
        return True

# end of class KNetScannerGUI

if __name__ == "__main__":
    knetscanner = KNetScannerGUI(0)
    knetscanner.MainLoop()
